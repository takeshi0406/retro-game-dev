                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Thu Mar 21 17:09:27 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc52280
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _sprite
                             13 ;--------------------------------------------------------
                             14 ; special function registers
                             15 ;--------------------------------------------------------
                             16 ;--------------------------------------------------------
                             17 ; special function bits 
                             18 ;--------------------------------------------------------
                             19 ;--------------------------------------------------------
                             20 ; internal ram data
                             21 ;--------------------------------------------------------
                             22 	.area _DATA
   0000                      23 _sprite::
   0000                      24 	.ds 16
                             25 ;--------------------------------------------------------
                             26 ; overlayable items in internal ram 
                             27 ;--------------------------------------------------------
                             28 	.area _OVERLAY
                             29 ;--------------------------------------------------------
                             30 ; indirectly addressable internal ram data
                             31 ;--------------------------------------------------------
                             32 	.area _ISEG
                             33 ;--------------------------------------------------------
                             34 ; bit data
                             35 ;--------------------------------------------------------
                             36 	.area _BSEG
                             37 ;--------------------------------------------------------
                             38 ; external ram data
                             39 ;--------------------------------------------------------
                             40 	.area _XSEG
                             41 ;--------------------------------------------------------
                             42 ; global & static initialisations
                             43 ;--------------------------------------------------------
                             44 	.area _GSINIT
                             45 	.area _GSFINAL
                             46 	.area _GSINIT
                             47 ;	small_sprite.c 26
                             48 ;	small_sprite.c 18
                             49 ;	genArrayInit
                             50 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21 00 00             51 	ld	hl,#_sprite
   0003 CD 00 00             52 	call	__initrleblock
   0006 F0 FF                53 	.db	-16,0xFF
   0008 00                   54 	.db	0
                             55 ;--------------------------------------------------------
                             56 ; Home
                             57 ;--------------------------------------------------------
                             58 	.area _HOME
                             59 	.area _CODE
                             60 ;--------------------------------------------------------
                             61 ; code
                             62 ;--------------------------------------------------------
                             63 	.area _CODE
                             64 ;	small_sprite.c 5
                             65 ;	genLabel
                             66 ;	genFunction
                             67 ;	---------------------------------
                             68 ; Function main
                             69 ; ---------------------------------
   0000                      70 ___main_start:
   0000                      71 _main:
   0000 E8 FC                72 	lda	sp,-4(sp)
                             73 ;	small_sprite.c 7
                             74 ;	genAssign
   0002 01 40 FF             75 	ld	bc,#0xFF40
                             76 ;	genAssign
                             77 ;	AOP_STK for _main_sloc0_1_0
   0005 F8 01                78 	lda	hl,1(sp)
   0007 36 40                79 	ld	(hl),#0x40
   0009 23                   80 	inc	hl
   000A 36 FF                81 	ld	(hl),#0xFF
                             82 ;	genPointerGet
                             83 ;	AOP_STK for _main_sloc0_1_0
                             84 ;	AOP_STK for _main_sloc1_1_0
   000C 2B                   85 	dec	hl
   000D 5E                   86 	ld	e,(hl)
   000E 23                   87 	inc	hl
   000F 56                   88 	ld	d,(hl)
   0010 1A                   89 	ld	a,(de)
   0011 2B                   90 	dec	hl
   0012 2B                   91 	dec	hl
                             92 ;	genAnd
                             93 ;	AOP_STK for _main_sloc1_1_0
   0013 77                   94 	ld      (hl),a
                             95 ; Removed redundent load
   0014 E6 FB                96 	and	a,#0xFB
                             97 ;	genAssign (pointer)
   0016 02                   98 	ld	(bc),a
                             99 ;	small_sprite.c 8
                            100 ;	genIpush
                            101 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0017 21 00 00            102 	ld	hl,#_sprite
   001A E5                  103 	push	hl
                            104 ;	genIpush
   001B 21 00 00            105 	ld	hl,#0x0000
   001E E5                  106 	push	hl
                            107 ;	genCall
   001F CD 00 00            108 	call	_set_sprite_data
   0022 E8 04               109 	lda	sp,4(sp)
                            110 ;	small_sprite.c 9
                            111 ;	genIpush
                            112 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0024 21 00 00            113 	ld	hl,#0x0000
   0027 E5                  114 	push	hl
                            115 ;	genCall
   0028 CD 00 00            116 	call	_set_sprite_tile
   002B E8 02               117 	lda	sp,2(sp)
                            118 ;	small_sprite.c 12
                            119 ;	genAssign
                            120 ;	AOP_STK for _main_i_1_1
   002D F8 03               121 	lda	hl,3(sp)
   002F 36 00               122 	ld	(hl),#0x00
                            123 ;	genLabel
   0031                     124 00101$:
                            125 ;	genCmpEq
                            126 ;	AOP_STK for _main_i_1_1
                            127 ; genCmpEq: left 1, right 1, result 0
   0031 F8 03               128 	lda	hl,3(sp)
   0033 7E                  129 	ld	a,(hl)
   0034 FE 14               130 	cp	a,#0x14
   0036 CA 93 00            131 	jp	z,00105$
   0039                     132 00109$:
                            133 ;	small_sprite.c 13
                            134 ;	genCast
                            135 ;	AOP_STK for _main_i_1_1
                            136 ;	AOP_STK for _main_sloc0_1_0
   0039 F8 03               137 	lda	hl,3(sp)
   003B 7E                  138 	ld	a,(hl)
   003C 2B                  139 	dec	hl
   003D 2B                  140 	dec	hl
   003E 22                  141 	ld	(hl+),a
   003F 36 00               142 	ld	(hl),#0x00
                            143 ;	genLeftShift
                            144 ;	AOP_STK for _main_sloc0_1_0
   0041 2B                  145 	dec	hl
   0042 46                  146 	ld	b,(hl)
   0043 23                  147 	inc	hl
   0044 4E                  148 	ld	c,(hl)
   0045 3E 04               149 	ld	a,#0x03+1
   0047 18 04               150 	jr	00111$
   0049                     151 00110$:
   0049 CB 20               152 	sla	b
   004B CB 11               153 	rl	c
   004D                     154 00111$:
   004D 3D                  155 	dec	a
   004E 20 F9               156 	jr	nz,00110$
                            157 ;	genPlus
                            158 ;	AOP_STK for _main_sloc0_1_0
                            159 ;	genPlusIncr
                            160 ;	Can't optimise plus by inc, falling back to the normal way
   0050 58                  161 	ld	e,b
   0051 51                  162 	ld	d,c
   0052 21 08 00            163 	ld	hl,#0x0008
   0055 19                  164 	add	hl,de
   0056 7D                  165 	ld	a,l
   0057 54                  166 	ld	d,h
   0058 F8 01               167 	lda	hl,1(sp)
   005A 22                  168 	ld	(hl+),a
   005B 72                  169 	ld	(hl),d
                            170 ;	genCast
                            171 ;	AOP_STK for _main_sloc0_1_0
                            172 ;	AOP_STK for _main_sloc1_1_0
   005C 2B                  173 	dec	hl
   005D 7E                  174 	ld	a,(hl)
   005E 2B                  175 	dec	hl
                            176 ;	genCast
                            177 ; Removed redundent load
                            178 ;	genIpush
                            179 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            180 ;	AOP_STK for _main_sloc1_1_0
   005F 77                  181 	ld      (hl),a
                            182 ; Removed redundent load
   0060 F5                  183 	push	af
   0061 33                  184 	inc	sp
                            185 ;	genIpush
   0062 78                  186 	ld	a,b
   0063 F5                  187 	push	af
   0064 33                  188 	inc	sp
                            189 ;	genIpush
                            190 ;	AOP_STK for _main_i_1_1
   0065 F8 05               191 	lda	hl,5(sp)
   0067 7E                  192 	ld	a,(hl)
   0068 F5                  193 	push	af
   0069 33                  194 	inc	sp
                            195 ;	genCall
   006A CD 00 00            196 	call	_move_sprite
   006D E8 03               197 	lda	sp,3(sp)
                            198 ;	small_sprite.c 14
                            199 ;	genAssign
   006F 01 40 FF            200 	ld	bc,#0xFF40
                            201 ;	genAssign
                            202 ;	AOP_STK for _main_sloc0_1_0
   0072 F8 01               203 	lda	hl,1(sp)
   0074 36 40               204 	ld	(hl),#0x40
   0076 23                  205 	inc	hl
   0077 36 FF               206 	ld	(hl),#0xFF
                            207 ;	genPointerGet
                            208 ;	AOP_STK for _main_sloc0_1_0
                            209 ;	AOP_STK for _main_sloc1_1_0
   0079 2B                  210 	dec	hl
   007A 5E                  211 	ld	e,(hl)
   007B 23                  212 	inc	hl
   007C 56                  213 	ld	d,(hl)
   007D 1A                  214 	ld	a,(de)
   007E 2B                  215 	dec	hl
   007F 2B                  216 	dec	hl
                            217 ;	genOr
                            218 ;	AOP_STK for _main_sloc1_1_0
   0080 77                  219 	ld      (hl),a
                            220 ; Removed redundent load
   0081 F6 02               221 	or	a,#0x02
                            222 ;	genAssign (pointer)
   0083 02                  223 	ld	(bc),a
                            224 ;	small_sprite.c 15
                            225 ;	genIpush
                            226 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0084 21 64 00            227 	ld	hl,#0x0064
   0087 E5                  228 	push	hl
                            229 ;	genCall
   0088 CD 00 00            230 	call	_delay
   008B E8 02               231 	lda	sp,2(sp)
                            232 ;	small_sprite.c 12
                            233 ;	genPlus
                            234 ;	AOP_STK for _main_i_1_1
                            235 ;	genPlusIncr
   008D F8 03               236 	lda	hl,3(sp)
   008F 34                  237 	inc	(hl)
                            238 ;	genGoto
   0090 C3 31 00            239 	jp	00101$
                            240 ;	genLabel
   0093                     241 00105$:
                            242 ;	genEndFunction
   0093 E8 04               243 	lda	sp,4(sp)
   0095 C9                  244 	ret
   0096                     245 ___main_end:
                            246 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 ___main_end                        0096 R
  0 ___main_start                      0000 R
    __initrleblock                     **** GX
    _delay                             **** GX
  0 _main                              0000 GR
    _move_sprite                       **** GX
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  1 _sprite                            0000 GR

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size   96   flags 0
   1 _DATA                              size   10   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size    9   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
